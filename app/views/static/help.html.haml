.row
  .col-sm-6.col-sm-offset-3

    %h2 Help for EOPAS: Frequently asked questions

    %h3 How to cite a phrase, word or morpheme?

    %p
      In the display page for a transcript, the URL of the current context is displayed at the top right.
      You can cut and paste this URL to directly link to the current context.

    %p
      There are two types of context that are being tracked.

    %p  
      %h4 Phrase citation

      %p
        The first is the context of the currently active phrase. Such a URL looks as follows:
        <code>http://www.eopas.org/transcripts/71#t=202.028,305.008</code>.

      %p
        You will notice that there is a fragment on this URL that starts with "#t=". This means that we are looking
        at a time range on the video or audio file that is presented on this Web page. The time segment 
        starts at <code>202.028 seconds</code> and goes until <code>305.008 seconds</code>.

      %p
        As a video or audio element plays back and goes through the annotation phrases, the URL at the top right is adapted.
        You can pause the video or audio element and cut and paste the URL for citation purposes.
        Alternatively, you can also right click on the little black "play" button of a particular phrase
        and copy the link address.
      
    %p
      %h4 Word/Morpheme citation

      %p
        The second is the context of a single word or morpheme. This is also tightly linked to concordance searches
        which are activated by clicking on a word or morpheme and search that same entity in all documents in the
        collection.
      
      %p
        As you click on a word or morpheme, a URL that looks as follows is displayed in the top right corner:
        <code>http://www.eopas.org/transcripts/42#!/p2/w5/m1</code>.
        
      %p
        The pattern of that URL is such that "#!" identifies this concordance linking, "/p" identifies the phrase by number,
        "/w" identifies the word within that phrase by position, "/m" identifies (where necessary) the morpheme within that
        word by position.

    %h3 Where are the XML schemas of the formats?

    %ul
      %li
        = link_to "EOPAS XML schema", "SCHEMAS/eopas.xsd"
      %li
        = link_to "Toolbox XML schema", "SCHEMAS/toolbox.xsd"
      %li
        = link_to "Transcriber XML schema", "SCHEMAS/transcriber.xsd"
      %li
        = link_to "ELAN XML schema", "SCHEMAS/elan.xsd"

    %h3 Where are the XSL Transforms to convert between formats?

    %ul
      %li
        = link_to "Toolbox to EOPAS", "XSLT/toolbox2eopas.xsl"
      %li
        = link_to "Toolbox cleaning", "XSLT/fixToolbox.xsl"
      %li
        = link_to "Transcriber to EOPAS", "XSLT/transcriber2eopas.xsl"
      %li
        = link_to "ELAN to EOPAS", "XSLT/elan2eopas.xsl"

    %h3 What format does a Toolbox input file have to be for import?

    %p
      Some Toolbox files use camel-case on element and attribute names.
      Others come with a namespace of "tb:" on all the elements.
      These differences will be removed using a clean-up script called fixToolbox.xsl.

    %p
      The following mapping of Toolbox elements to EOPAS is undertaken:

    %ul
      %li
        %pre
          itmgroup          -> get each
      %li
        %pre
          idgroup           ->   phrase
      %li
        %pre
          concat txgroup/tx ->     transcription
      %li
        %pre
          txgroup           ->     wordlist
      %li
        %pre
          tx                ->       word/text
      %li
        %pre
          mr                ->         morphemelist/morpheme/text@kind['morpheme']
      %li
        %pre
          mg                ->         morphemelist/morpheme/text@kind['gloss']
      %li
        %pre
          fg                ->     translation


    %h3 What format does a Transcriber input file have to be for import?

    %p
      In EOPAS we don't know about different speakers, so speaker turns are removed.
      The EOPAS XML file format moves the speaker information on the phrase.
      Topic information and the sections are removed.

    %p
      The following mapping of Transcriber elements to EOPAS is undertaken:

    %ul
      %li
        %pre
          Episode            -> get each
      %li
        %pre
          Sync               ->   phrase with Turn@speaker
      %li
        %pre
          Sync.content()     ->     transcription
      %li
        %pre
          Comment@desc       ->     transcription with "[" "]"
      %li
        %pre
          Event@desc+@extent ->     transcription with "[" "]"


    %h3 What format does an Elan input file have to be for import?

    %p
      Elan allows a vast combination of tier types and the choice of tier names is up to the author.
      The EOPAS file format only supports a limited structure, so only three different types of Elan files are being supported.

    %p
      Option 1: The following mapping of Elan elements with default-lt tiers is undertaken:
    %ul
      %li
        %pre
          tier=default-lt    -> phrase/transcription

    %p
      Option 2: The following mapping of Elan elements with utterance tiers is undertaken:
    %ul
      %li
        %pre
          tier=utterance     -> phrase/transcription
      %li
        %pre
          tier=words         ->   phrase/wordlist/word/text

    %p
      Option 3: The following mapping of Elan elements with ref tiers is undertaken:
    %ul
      %li
        %pre
          tier=ref           -> phrase/transcription
      %li
        %pre
          tier=tx            ->   wordlist/word/text
      %li
        %pre
          tier=mr            ->        morphemelist/morpheme/text@kind['morpheme']
      %li
        %pre
          tier=mg            ->        morphemelist/morpheme/text@kind['gloss']
      %li
        %pre
          tier=fg            ->   translation
      %li
        %pre
          tier=graid         ->   graid annotation


    %h3 What is involved in writing support for a new format?

    %p
      EOPAS is based on the assumption that all import formats are provided in XML and thus have a XML schema.
      To support a new input format, one has to provide a XML Schema for that format and place it in the
      directory "public/SCHEMAS" on the server. Next one has to to create a XSL Transform that will convert that
      XML format to the EOPAS XML format. The XSLT is placed in the "public/XSLT" directory.
      Finally, one has to change the list of available input format in "app/models/transcript.rb" to make it an
      available format in the upload process.
      
    %p
      For development of the XSLT, there are helper functions in the "bin" directory of the application for
      validation, transcoding and general running of a xsl transform. Further, one should add some example files
      into the "features/test_data" directory and add a test to "features/transcript.feature". Do not forget to
      finish it all off with documentation in "doc/TRANSCODING".

